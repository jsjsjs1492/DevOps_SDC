pipeline {
    agent any

    environment {
        APP_NAME = "dev-community-backend"
        DEPLOY_DIR = "/var/lib/jenkins/deploy"
        LOG_FILE = "${DEPLOY_DIR}/application.log"
    }


    triggers {
        // GitHub Webhook으로 푸시 감지
        githubPush()
    }

    stages {
        stage('Pull from GitHub') {
            steps {
                echo "📥 Pulling latest code from GitHub..."
                git branch: 'develop', url: 'https://github.com/KangNaewon/dev-community.git'
            }
        }

        stage('Build with Gradle') {
            steps {
                echo "🛠️ Building the project with Gradle..."
                dir('dev-community-backend') {
                    sh 'chmod +x ./gradlew'
                    sh './gradlew clean build -x test'
                }
            }
        }
        stage('Stop current application') {
            steps {
                echo "🛑 Stopping the currently running application (if any)..."
                script {
                    def pid = sh(script: "pgrep -f ${APP_NAME}.jar || true", returnStdout: true).trim()
                    if (pid) {
                        sh "kill -15 $pid"
                        sh "sleep 5"
                    } else {
                        echo "✅ No application is currently running."
                    }
                }
            }
        }


        stage('Deploy new JAR') {
            steps {
                echo "🚀 Deploying the new version..."
                script {
                    def jarName = sh(script: "ls dev-community-backend/build/libs/*.jar | grep -v plain | head -n 1", returnStdout: true).trim()
                    sh "cp ${jarName} ${DEPLOY_DIR}/${APP_NAME}.jar"
                    sh "nohup java -jar ${DEPLOY_DIR}/${APP_NAME}.jar > ${LOG_FILE} 2>&1 &"
                }
            }
        }

    }

    post {
        success {
            echo "🎉 Deployment completed successfully!"
        }
        failure {
            echo "❌ Deployment failed. Check the logs."
        }
    }
}
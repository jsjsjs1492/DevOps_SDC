# dev-community-backend/src/test/resources/application.properties
# 이 파일은 테스트 실행 시 src/main/resources/application-prod.properties 및
# src/main/resources/application.properties (로컬 개발용)의 설정을 오버라이드합니다.
# 테스트는 실제 외부 서비스에 의존하지 않고 독립적으로 실행되어야 합니다.

# 1. H2 인메모리 데이터베이스 설정 (테스트 전용)
# JDBC URL: 메모리 내부에 testdb라는 이름의 데이터베이스를 생성하고,
#           DB_CLOSE_DELAY=-1은 JVM이 종료될 때까지 DB를 닫지 않도록 합니다.
#           DB_CLOSE_ON_EXIT=FALSE는 애플리케이션 종료 시 DB를 닫지 않도록 합니다.
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver # H2 드라이버 클래스
spring.datasource.username=sa # 기본 사용자 이름
spring.datasource.password= # 기본 비밀번호 (없음)

# 2. JPA/Hibernate 설정 (H2 데이터베이스에 맞게 조정)
# Spring Boot 3.x에서 하이버네이트 방언을 명시하는 올바른 방법입니다.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect # <-- 이 부분이 가장 중요!
spring.jpa.hibernate.ddl-auto=update # 테스트 실행 시 엔티티에 따라 DDL(테이블)을 자동으로 업데이트합니다.
                                     # 'create-drop'은 테스트 실행마다 새로 생성하고 종료 시 삭제하여 깨끗한 상태를 유지합니다.
spring.jpa.show-sql=true # 테스트 시에도 SQL 쿼리 로그를 콘솔에 표시할지 여부 (선택 사항)
spring.jpa.properties.hibernate.format_sql=true # SQL 쿼리를 보기 좋게 포맷팅합니다 (선택 사항)

# 3. 외부 서비스 설정 (테스트 시 실제 연결 방지)

# Redis 설정은 @MockBean으로 처리되므로 여기에 별도 설정이 필요 없을 수도 있습니다.
# 하지만 만약 컨텍스트 로딩 시 Redis 빈이 생성될 때 설정 값이 필요하다면,
# 실제 연결 없이 빈 생성을 위한 최소한의 더미 값을 여기에 넣어줄 수 있습니다.
# spring.data.redis.host=localhost
# spring.data.redis.port=6379

# 메일 서비스 설정은 @MockBean으로 처리되므로 여기에 별도 설정이 필요 없을 수도 있습니다.
# cloud.aws.credentials.access-key 등 환경 변수로 받는 값들은 테스트 환경에서는 직접 제공
cloud.aws.s3.bucket=test-bucket-for-ci
cloud.aws.s3.region=ap-northeast-2
cloud.aws.credentials.access-key=test-access-key-dummy # 테스트용 더미 키
cloud.aws.credentials.secret-key=test-secret-key-dummy # 테스트용 더미 시크릿

# 4. 기타 테스트 관련 설정
# server.servlet.session.cookie.secure=false (이전 boolean 변환 오류 해결을 위해 추가)
server.servlet.session.cookie.secure=false
